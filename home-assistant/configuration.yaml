homeassistant:
  name: Home Energy                    # Name shown in the Home Assistant UI
  latitude: !secret home_latitude     # Your location for sun-based automations (stored in secrets.yaml)
  longitude: !secret home_longitude
  elevation: !secret home_elevation
  unit_system: metric                 # Metric units (Celsius, meters, etc.)
  currency: SEK
  country: SE
  time_zone: Europe/Stockholm

modbus:
  - name: SMA
    type: tcp
    host: 192.168.10.100
    port: 502
    delay: 5
    timeout: 5
    message_wait_milliseconds: 200
    sensors:
      - name: SMA Instantaneous Power
        slave: 3
        address: 30775
        input_type: holding
        data_type: int32
        swap: word
        scale: 1
        precision: 0
        unit_of_measurement: "W"

      - name: SMA Total Energy
        slave: 3
        address: 30535
        input_type: holding
        data_type: uint32
        swap: word
        scale: 0.001
        precision: 1
        unit_of_measurement: "kWh"

      - name: SMA Grid Frequency
        slave: 3
        address: 30783
        input_type: holding
        data_type: uint16
        scale: 0.01
        precision: 2
        unit_of_measurement: "Hz"

      - name: SMA Inverter Status
        slave: 3
        address: 30201
        input_type: holding
        data_type: uint16
        unit_of_measurement: ""

template:
  - sensor:
      - name: Net Power Flow
        unit_of_measurement: "W"
        state_class: measurement
        device_class: power
        icon: mdi:flash
        state: >
          {% set delivered = states('sensor.p1_power_delivered') %}
          {% set returned = states('sensor.p1_power_returned') %}
          {% if delivered in ['unavailable', 'unknown'] or returned in ['unavailable', 'unknown'] %}
            0
          {% else %}
            {{ (delivered | float(0) - returned | float(0)) | round(1) }}
          {% endif %}

      - name: Estimated Self Consumption
        unit_of_measurement: "W"
        state_class: measurement
        device_class: power
        state: >
          {% set production = states('sensor.sma_instantaneous_power') %}
          {% set export = states('sensor.p1_power_returned') %}
          {% if production in ['unavailable', 'unknown'] or export in ['unavailable', 'unknown'] %}
            0
          {% else %}
            {{ [production | float(0) - export | float(0), 0] | max | round(1) }}
          {% endif %}

      - name: Solar Autonomy
        unit_of_measurement: "%"
        state_class: measurement
        device_class: battery
        state: >
          {% set prod = states('sensor.sma_instantaneous_power') %}
          {% set import = states('sensor.p1_power_delivered') %}
          {% if prod in ['unavailable', 'unknown'] or import in ['unavailable', 'unknown'] %}
            0
          {% else %}
            {% set prod_f = prod | float(0) %}
            {% set import_f = import | float(0) %}
            {% set usage = prod_f + import_f %}
            {{ (prod_f / usage * 100) | round(1) if usage > 0 else 0 }}
          {% endif %}
mobile_app:
  push:
    ios:
      categories:
        - name: Home Energy
          identifier: home_energy
          actions:
            - identifier: view
              title: View
              activation_mode: background
              authentication_required: false
              destructive: false
              behavior: default
            - identifier: ignore
              title: Ignore
              activation_mode: background
              authentication_required: false
              destructive: true
              behavior: default
